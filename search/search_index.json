{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"atlas-db","text":""},{"location":"#environment","title":"Environment","text":"<p>File <code>.env</code> must be configured with the following recommended environment variables.</p> <pre><code>POSTGRES_USER=postgres #Recommended\nPOSTGRES_PASSWORD= #Database will initialize user defined above with this pw and superuser rights \nPOSTGRES_DB=pose_dev\n</code></pre>"},{"location":"#test-database","title":"Test database","text":"<p><code>pose_dev.sql</code> file contains dump of user roles and definition, and contains sample records from the original table. It is ran by the new postgres server at first initialization.</p> <p>It can be created by runnning <code>make.sh</code> from <code>postgres</code> vm, using the <code>postgres</code> user :</p> <pre><code>sudo su postgres\nsource make_dump.sh\n</code></pre>"},{"location":"#python-package-dependencies","title":"Python package dependencies","text":"<p>Some taxonomic features depend on the <code>bdqc_taxa</code> package, which is not available on PyPI. It can be installed from the git repository using the following command under the <code>postgres</code> user:</p> <pre><code>sudo su postgres\n\npip install --upgrade git+https://github.com/ReseauBiodiversiteQuebec/bdqc_taxa#egg=bdqc_taxa\n</code></pre> <p>The database must be restarted after installing the package.</p> <pre><code>sudo systemctl restart postgresql\n</code></pre>"},{"location":"#database-schemas-overview","title":"Database schemas overview","text":"<p>The database is organized in the following schemas: - <code>public</code>: contains the tables and views used to store biodiversity data - <code>api</code>: contains the tables, views and functions used to store and retrieve joined data from the <code>public</code> schema. This schema is used by the API. - <code>data_transfer</code>: contains the tables and views used to store temporary data. This schema may be used by users with <code>read_write_all</code> role. - <code>atlas_api</code>: contains the tables, views and functions used to store and retrieve joined data from the <code>public</code> schema. These objects are used by the API for the web atlas portal. - <code>observations_partitions</code>: contains partitionned tables used to store observations. Observations are partitionned by column <code>within_quebec</code>. - Deprecated. <code>public_api</code>: This schema is deprecated and will be removed in a future version and should not be used anymore. It contains the tables, views and functions used to store and retrieve joined data from the <code>public</code> schema. These objects are used by the API for the web atlas portal.</p>"},{"location":"#roles-permissions","title":"Roles &amp; permissions","text":"<p>The database is organized in the following roles: - <code>read_only_public</code>: can only read unrestricted data from the <code>public</code>, <code>api</code> and <code>atlas_api</code> schemas. This role is used by the API for general public access. - <code>read_only_all</code>: can only read all data, restricted or not, from the <code>public</code>, <code>api</code> and <code>atlas_api</code> schemas. This role is used by the API for restricted access, such as for researchers and biodiversity quebec members. - <code>read_write_all</code>: can read and write all data, restricted or not, from the <code>public</code>, <code>api</code> and <code>atlas_api</code> schemas. This role is used by biodiversity quebec members to update the database.</p>"},{"location":"#documentation","title":"Documentation","text":"<p>Documentation is provided by markdown files in the <code>docs</code> folder. It is compiled using mkdocs with the material theme. Configuration is provided by the <code>mkdocs.yml</code> file.</p> <p>To install mkdocs, run the following command:</p> <pre><code>pip install mkdocs-material\n</code></pre> <p>To compile the documentation, run the following command:</p> <pre><code>mkdocs build\n</code></pre> <p>See Material for MkDocs website for more information.</p>"},{"location":"managing_observations/","title":"Managing Ecological Observations","text":""},{"location":"managing_observations/#managing-observations","title":"Managing observations","text":"<p>Ecological observations are managed through a star schema, where the core table is <code>observations</code> and the dimension tables are <code>datasets</code>, <code>taxa</code>, <code>taxa_obs</code>, <code>variables</code> and <code>efforts</code>. The <code>observations</code> table contains the foreign keys to the dimension tables, as well as the observation value and the observation geometry. The dimension tables contain the metadata for the observations.</p> <p>It is is designed to support different observation types, such as abundances, occurrences, and presence/absence data of various units.</p> <p></p> <p>Figure 1. Entity relationship diagram for the observations related tables</p>"},{"location":"managing_observations/#tables-overview","title":"Tables overview","text":"<p>Below is a brief description of each table. See the Schema Reference section for more details on each table.</p> <p>Observations: Central to the schema, storing detailed records of individual ecological observations.</p> <p>Important for injection</p> <p>Geometry can be injected using the WKT format: <code>SRID=4326;POINT(-73.5 45.5)</code> and will be automatically converted to the PostGIS geometry type.</p> <p>Columns <code>created_at</code>, <code>created_by</code>, <code>modified_at</code>, <code>within_quebec</code>, <code>dwc_event_date</code> are automatically set by the database and should not be set manually.</p> <p>Datasets: Manages metadata about different datasets to which observations belong. Includes comprehensive information like source, creator, title, and publisher.</p> <p>Variables: Categorizes different observation types and units.</p> <p>Taxa_Obs: Stores raw taxonomic information as provided by the source, facilitating the recording of various taxa. Those entries are meant as an archive of the original data and are not used for data retrieval. Taxonomic information is managed by other resources within the database, like the <code>taxa_ref</code> table. See the <code>managing_taxonomy</code> article for more details.</p> <p>Important for injection</p> <p>The <code>scientific_name</code> column is required. The <code>authorship</code> and <code>rank</code> columns are optional and will be set to an empty string if not provided. Entries are accepted for any taxonomic rank, including species, genus, complexes, etc.</p> <p>The <code>parent_scientific_name</code> column is optional. It is used to resolve conflicts where a scientific name corresponds to different organisms in different branches of the tree of life. If not specified, all results for the given scientific name are returned. It is recommended to specify the phylum or kingdom when available</p> <p>Columns <code>rank</code>, <code>authorship</code> are optional and should only be set if available by the source. </p> <p>Efforts: Quantifies the efforts (like time, distance, etc.) put into making an observation.</p> <p>Obs_Efforts: Links observations with their corresponding efforts. Creates a many-to-many relationship, allowing multiple efforts to be linked to a single observation and vice versa.</p>"},{"location":"managing_observations/#considerations","title":"Considerations","text":"<p>Auto-generated columns: The following columns are automatically generated by the database and should not be set manually: <code>created_at</code>, <code>created_by</code>, <code>modified_at</code>, <code>within_quebec</code>, <code>dwc_event_date</code>.</p> <p>Unique Constraints: Unique constraints are used to prevent duplicate observations from being inserted into the database. The combination of <code>geom</code>, <code>dwc_event_date</code>, <code>id_taxa_obs</code>, <code>obs_value</code>, <code>id_variables</code>, <code>within_quebec</code> ensures that each observation is uniquely identifiable and retrievable. </p> <p>Partitions: Partitions are used to store observations that are within or outside of Quebec. This allows for faster queries on observations that are within Quebec, which are the most commonly used. See the <code>partitions</code> section in the observations schema reference for more details.</p> <p>Taxonomic information: Only raw taxonomic information is stored in the <code>taxa_obs</code> table. The valid taxonomy, references, and other information are managed by <code>taxa_ref</code>, <code>taxa_vernacular</code>, <code>taxa_groups</code> tables and related ressources. This is managged automatically with periodic updates. See the <code>managing_taxonomy</code> article for more details.</p>"},{"location":"public_datasets/","title":"Table Datasets","text":""},{"location":"public_datasets/#table-datasets","title":"Table: Datasets","text":""},{"location":"public_datasets/#description","title":"Description","text":"<p>The datasets table stores comprehensive metadata about ecological observation datasets. This includes information about the source, creator, type of data, and publication details. It serves as a central repository for tracking various datasets related to ecological observations.</p>"},{"location":"public_datasets/#dependencies","title":"Dependencies","text":"<p>None</p>"},{"location":"public_datasets/#columns","title":"Columns","text":"Column Name Type Description Constraints id Integer A unique identifier for each dataset. Primary key, Not Null original_source Character Varying The original source of the dataset. Where was it obtained from (e.g., 'GBIF', 'eBird', 'MELCCFP'). Not Null org_dataset_id Character Varying Optional. An identifier used by the <code>original_source</code> or <code>publisher</code> for the dataset. - creator Character Varying Optional. The creator of the dataset (e.g., individual researcher or institution). - title Character Varying The title of the dataset. Not Null publisher Character Varying Optional. The publisher of the dataset (e.g., 'Nature Publishing Group', 'Elsevier', 'GBIF', 'Donn\u00e9es Qu\u00e9bec'). - modified Date The date when the dataset was last modified. Not Null keywords Character Varying[] Optional. An array of keywords associated with the dataset. - abstract Text Optional. A brief abstract or summary of the dataset. - type_sampling Character Varying Optional. The type of sampling method used in the dataset. - type_obs public.type_observation Optional. The type of observation (Enum values: 'living specimen', 'preserved specimen', 'fossil specimen', 'human observation', 'machine observation', 'literature', 'material sample', 'others'). - intellectual_rights Character Varying Optional. Information about the intellectual rights of the dataset. - license Character Varying Optional. The license under which the dataset is released (e.g., 'CC BY 4.0', 'GPL', 'Entente de partage'). - owner Character Varying Optional. The owner of the dataset (e.g., a university, research institution, or individual researcher). - methods Text Optional. A detailed description of the methods used in the dataset. - open_data Boolean A boolean indicating whether the dataset is open data. Not Null exhaustive Boolean A boolean indicating whether the dataset is exhaustive, meaning obtained from a checklist survey. Not Null direct_obs Boolean A boolean indicating whether the dataset contains direct observations. Not Null centroid Boolean Optional. A boolean indicating whether the dataset contains centroid data. Default: False doi Text Optional. The Digital Object Identifier for the dataset. (e.g. https://doi.org/10.15468/ykxm8x) Default: Empty String citation Text Optional. The recommended citation for the dataset. Default: Empty String"},{"location":"public_efforts_obs_efforts/","title":"Table Efforts & lookup table","text":""},{"location":"public_efforts_obs_efforts/#table-efforts","title":"Table: Efforts","text":""},{"location":"public_efforts_obs_efforts/#description","title":"Description","text":"<p>The <code>efforts</code> table is specifically designed to record the efforts associated with ecological observations. This table plays a crucial role in quantifying and categorizing the effort invested in obtaining various observations. The efforts could be in various forms like time spent, area covered, traps used, etc., and are quantified as numeric values. The link to the <code>variables</code> table through <code>id_variables</code> specifies the type of effort being recorded, ensuring a standardized and coherent approach to effort recording across different observation types.</p>"},{"location":"public_efforts_obs_efforts/#relationship-with-observations","title":"Relationship with Observations","text":"<p>The efforts table is intricately linked to the observations table through the obs_efforts lookup table. This table acts as a relational bridge, establishing a connection between individual observations and the corresponding efforts involved in their acquisition. The obs_efforts table essentially serves as a many-to-many relationship facilitator, allowing each observation to be associated with one or more effort entries, and vice versa. See the <code>obs_efforts</code> table documentation for more details.</p>"},{"location":"public_efforts_obs_efforts/#dependencies","title":"Dependencies","text":"<ul> <li>Sequence: <code>efforts_id_seq</code></li> <li>Foreign Key: </li> <li><code>id_variables</code> references <code>public.variables (id)</code></li> </ul>"},{"location":"public_efforts_obs_efforts/#columns","title":"Columns","text":"Column Name Type Description Constraints id Integer A unique identifier for each effort entry. Primary key, Not Null, Default: nextval('efforts_id_seq'::regclass) id_variables Integer The identifier of the variable associated with the effort. Not Null, Foreign key effort_value Numeric The quantitative value representing the effort. Not Null, Part of Unique Constraint"},{"location":"public_efforts_obs_efforts/#additional-constraints","title":"Additional Constraints","text":"<ul> <li>Unique Constraint: <code>efforts_id_variables_effort_value_key</code> ensures that each combination of <code>id_variables</code> and <code>effort_value</code> is unique within the table, preventing redundancy in effort recording.</li> </ul>"},{"location":"public_efforts_obs_efforts/#foreign-key-constraints","title":"Foreign Key Constraints","text":"<ul> <li><code>efforts_id_variables_fkey</code>: Links to the <code>variables</code> table, ensuring that each effort is associated with a valid variable type, providing context and meaning to the effort value recorded.</li> </ul>"},{"location":"public_efforts_obs_efforts/#table-obs_efforts","title":"Table: Obs_Efforts","text":""},{"location":"public_efforts_obs_efforts/#description_1","title":"Description","text":"<p>The <code>obs_efforts</code> table serves as a linking mechanism between ecological observations and the efforts associated with them. It is a junction table designed to create a many-to-many relationship, capturing which efforts are related to specific observations. This design is essential for providing a comprehensive understanding of the resources and efforts expended in gathering each observation, such as the time, distance covered, or equipment used. By establishing a clear connection between observations and their corresponding efforts, this table enhances the granularity and context of ecological data analysis.</p>"},{"location":"public_efforts_obs_efforts/#dependencies_1","title":"Dependencies","text":"<ul> <li>Foreign Keys: </li> <li><code>id_obs</code> references an observation table (to be specified).</li> <li><code>id_efforts</code> references <code>public.efforts (id)</code></li> </ul>"},{"location":"public_efforts_obs_efforts/#columns_1","title":"Columns","text":"Column Name Type Description Constraints id_obs Bigint The identifier of the observation. Represents a link to a specific observation record. Not Null, Part of Unique Constraint id_efforts Integer The identifier of the effort. Links to a specific effort record in the <code>efforts</code> table. Not Null, Foreign key, Part of Unique Constraint"},{"location":"public_efforts_obs_efforts/#additional-constraints_1","title":"Additional Constraints","text":"<ul> <li>Unique Constraint: <code>obs_efforts_id_obs_id_efforts_key</code> ensures that each combination of <code>id_obs</code> and <code>id_efforts</code> is unique within the table, preventing duplication in the linking of observations and efforts.</li> </ul>"},{"location":"public_efforts_obs_efforts/#foreign-key-constraints_1","title":"Foreign Key Constraints","text":"<ul> <li><code>obs_efforts_id_efforts_fkey</code>: Ensures the integrity of the link between the <code>obs_efforts</code> and <code>efforts</code> tables, confirming that every effort associated with an observation is valid and exists in the <code>efforts</code> table.</li> </ul>"},{"location":"public_observations/","title":"Table Observations","text":""},{"location":"public_observations/#table-observations","title":"Table: Observations","text":""},{"location":"public_observations/#description","title":"Description","text":"<p>The <code>observations</code> table is central in the Atlas database to recording ecological observations. It is is designed to support different observation types, such as abundances, occurrences, and presence/absence data of various units. The type of observation is specified by the <code>id_variables</code> column, which references the <code>variables</code> table. See the <code>variables</code> table documentation for more details.</p> <p>It encompasses a wide range of data including geographical coordinates, observation times, taxa details, and associated variables, relying on foreign keys to other tables to store this information. See the <code>Dependencies</code> section below for more details and relevant tables documentation.</p> <p>Partitions are used to store observations that are within or outside of Quebec. This allows for faster queries on observations that are within Quebec, which are the most commonly used. See the <code>partitions</code> section below for more details.</p> <p>Triggers are used to automatically update the <code>within_quebec</code>, <code>modified_at</code>, <code>dwc_event_date</code> columns on insert or update. See the <code>triggers</code> section below for more details.</p>"},{"location":"public_observations/#dependencies","title":"Dependencies","text":"<ul> <li>Foreign Keys: </li> <li><code>id_datasets</code> references <code>public.datasets (id)</code></li> <li><code>id_taxa</code> references <code>public.taxa (id)</code></li> <li><code>id_taxa_obs</code> references <code>public.taxa_obs (id)</code></li> <li><code>id_variables</code> references <code>public.variables (id)</code></li> <li>Partitions:</li> <li><code>observations_partitions.outside_quebec</code></li> <li><code>observations_partitions.within_quebec</code></li> <li>Sequence: <code>observations_partitions.observations_id_seq</code></li> </ul>"},{"location":"public_observations/#columns","title":"Columns","text":"Column Name Type Description Constraints id Bigint A unique identifier for each observation. Primary key (part of), Not Null, Default: nextval('observations_partitions.observations_id_seq'::regclass) org_parent_event Character Varying Optional. Identifier of the parent event in the original source. - org_event Character Varying Optional. Identifier of the event in the original source. - org_id_obs Character Varying Optional. Original identifier of the observation in the original source. - id_datasets Integer The identifier of the dataset to which the observation belongs. Not Null, Foreign key id_taxa_obs Integer Identifier for the observed taxon. Foreign key geom Geometry(Point, 4326) The geometry of the coordinates of the observation. Not Null year_obs Integer The year of the observation. Not Null month_obs Integer The month of the observation. - day_obs Integer The day of the observation. - time_obs Time The time of the observation. - id_variables Integer The identifier of the variable observed. Whether of type <code>abundance</code>, <code>occurrence</code>, etc. is stored in table <code>variables</code> Not Null, Foreign key obs_value Numeric The observed value for the variable. Might be integer or float in the case of abundance, or 0 or 1 in case of presence/absence Not Null id_taxa (deprecated) Integer Deprecated. The identifier of the taxa observed. From <code>taxa</code> table. Only to maintain compatibility. Foreign key issue Character Varying Optional. Any issues or remarks related to the observation. - created_by Character Varying Auto on insert. The user who inserted the observation record within Atlas DB. Default: CURRENT_USER modified_at Timestamp with time zone Auto on insert/update. The timestamp when the observation was last modified. Not Null, Default: CURRENT_TIMESTAMP modified_by Character Varying Auto on insert/update. The user who last modified the observation within Atlas DB. Default: CURRENT_USER within_quebec Boolean Auto on insert/update. Indicates whether the observation was within Quebec. Part of primary key, Not Null, Default: false dwc_event_date Text Auto on insert/update. The Darwin Core (DwC) formatted event date of the observation. Not Null, Default: '' (empty string)"},{"location":"public_observations/#additional-constraints","title":"Additional Constraints","text":"<ul> <li>Primary Key Constraint: The combination of <code>id</code> and <code>within_quebec</code> serves as a unique identifier for each observation record.</li> <li>Foreign Key Constraints: Links to <code>datasets</code>, <code>taxa</code>, and <code>taxa_obs</code> tables ensure referential integrity.</li> <li>Unique Constraint: The combination of <code>geom</code>, <code>dwc_event_date</code>, <code>id_taxa_obs</code>, <code>obs_value</code>, <code>id_variables</code>, <code>within_quebec</code> ensures that each observation is uniquely identifiable and retrievable. This is used to prevent duplicates using the index <code>observations_unique_rows</code>.</li> </ul>"},{"location":"public_observations/#indexes","title":"Indexes","text":"<ul> <li><code>dwc_event_date_idx</code> on <code>dwc_event_date</code></li> <li><code>observations_geom_date_time_idx</code> on <code>geom</code>, <code>year_obs</code>, <code>month_obs</code>, <code>day_obs</code>, <code>time_obs</code></li> <li><code>observations_geom_idx</code> on <code>geom</code></li> <li><code>observations_id_datasets_id_taxa_idx</code> on <code>id_datasets</code>, <code>id_taxa</code></li> <li><code>observations_id_datasets_idx</code> on <code>id_datasets</code></li> <li><code>observations_id_idx</code> on <code>id</code></li> <li><code>observations_id_taxa_obs_dwc_event_date_geom_idx</code> on <code>id_taxa_obs</code>, <code>dwc_event_date</code>, <code>geom</code></li> <li><code>observations_id_taxa_obs_idx</code> on <code>id_taxa_obs</code></li> <li><code>observations_unique_rows</code> on <code>geom</code>, <code>dwc_event_date</code>, <code>id_taxa_obs</code>, <code>obs_value</code>, <code>id_variables</code>, <code>within_quebec</code></li> <li><code>observations_year_obs_idx</code> on <code>year_obs</code></li> <li>Specific indexes on partitions (<code>within_quebec_year_obs_idx</code>, <code>observations_id_taxa_obs_idx</code> in <code>observations_partitions.within_quebec</code>)</li> </ul>"},{"location":"public_observations/#triggers","title":"Triggers","text":"<ul> <li><code>set_dwc_event_date_trggr</code>: Before insert, sets the DwC event date.</li> <li><code>update_modified_at</code>: Before update, updates the <code>modified_at</code> timestamp.</li> <li><code>action_user_logger</code>: In partition <code>observations_partitions.outside_quebec</code>, logs user actions before insert or update.</li> </ul>"},{"location":"public_observations/#rationale","title":"Rationale","text":""},{"location":"public_observations/#use-of-partitions-for-performance","title":"Use of Partitions for Performance","text":"<p>The use of table partitions in the observations table, particularly with the within_quebec column, is a strategic decision aimed at enhancing database performance. Partitioning is a highly effective method for managing large tables by splitting them into smaller, more manageable pieces. In this case, the observations_partitions schema segregates observation data into distinct partitions based on whether the observations occurred within Quebec (within_quebec = true) or outside it (within_quebec = false). This approach significantly improves query performance by allowing the database engine to quickly locate and retrieve data from a smaller subset of the table. Additionally, it simplifies maintenance tasks such as backups and data purges, as operations can be performed on individual partitions without affecting the entire dataset.</p> <p>Partition tables <code>observations_partitions.within_quebec</code> and <code>observations_partitions.outside_quebec</code> are created within the <code>observations_partitions</code> schema. </p>"},{"location":"public_observations/#temporal-columns","title":"Temporal Columns","text":"<p>The inclusion of year_obs, month_obs, day_obs, and time_obs columns in the observations table is intentionally designed to accommodate observations with varying levels of temporal resolution. This flexibility is crucial in ecological data collection, where the exact time of an observation may range from a specific moment to a broader time frame. By breaking down the observation timestamp into separate components, the database can store and process data that is only accurate to a certain level (e.g., year, month, day, or time). This structure not only caters to the diverse nature of ecological observations but also enhances the ability to perform time-based queries and analyses with varying granularities.</p>"},{"location":"public_observations/#duplicates-and-dwc-event-date","title":"Duplicates and DwC Event Date","text":"<p>Duplicates are possible through the process of adding data from various sources, such as GBIF and eBird. Duplicates are limited through the use of a unique constraint on the combination of <code>geom</code>, <code>dwc_event_date</code>, <code>id_taxa_obs</code>, <code>obs_value</code>, <code>id_variables</code>, <code>within_quebec</code>. </p> <p>The <code>dwc_event_date</code> column values are generated automatically using a trigger function. It is a formatted string that reflects a standardized approach to recording event dates in biodiversity data. The use of this column is required to ensure each observation is distinctly identifiable and retrievable. It also facilitates data interoperability, making it easier to share and compare ecological data across different platforms and studies.</p>"},{"location":"public_taxa_obs/","title":"Table Taxa Obs","text":""},{"location":"public_taxa_obs/#table-taxa_obs","title":"Table: Taxa_Obs","text":""},{"location":"public_taxa_obs/#description","title":"Description","text":"<p>The <code>taxa_obs</code> table is structured to record raw taxonomic information directly from source data. This table is essential for capturing a wide range of taxonomic details, including scientific names, authorship, and taxonomic rank. It is designed to accommodate taxa of any rank, such as species, genus, complexes, etc., without requiring corrections for grammatical accuracy or valid taxonomy. These aspects are managed by other resources within the database, like the <code>taxa_ref</code> table.</p>"},{"location":"public_taxa_obs/#dependencies","title":"Dependencies","text":"<ul> <li>Sequence: <code>taxa_obs_id_seq</code></li> </ul>"},{"location":"public_taxa_obs/#columns","title":"Columns","text":"Column Name Type Description Constraints id Integer A unique identifier for each taxonomic observation. Primary key, Not Null, Default: nextval('taxa_obs_id_seq'::regclass), Using Index Tablespace ssdpool scientific_name Text Optional. The scientific name of the taxon observed. This includes taxa at any rank, such as species or genus. Not Null, Part of Unique Constraint authorship Text Optional. The authorship of the scientific name. Defaults to an empty string if not provided. Not Null, Default: '' (empty string), Part of Unique Constraint rank Text Optional. The taxonomic rank of the observation. Defaults to an empty string if not provided. Default: '' (empty string), Part of Unique Constraint parent_scientific_name Text Optional. The scientific name of the parent taxon. Used to resolve conflicts where a scientific name corresponds to different organisms in different branches of the tree of life. Optional; if not specified, all results for the given scientific name are returned. - created_at Timestamp with time zone Auto on insert/update. The timestamp when the taxonomic observation was created. Not Null, Default: CURRENT_TIMESTAMP modified_at Timestamp with time zone Auto on insert/update. The timestamp when the taxonomic observation was last modified. Not Null, Default: CURRENT_TIMESTAMP modified_by Text Auto on insert/update. The user who last modified the taxonomic observation record. Not Null, Default: CURRENT_USER"},{"location":"public_taxa_obs/#additional-constraints","title":"Additional Constraints","text":"<ul> <li>Unique Constraint: <code>taxa_obs_unique_rows</code> ensures that each combination of <code>scientific_name</code>, <code>authorship</code>, <code>rank</code>, <code>parent_scientific_name</code> is unique within the table.</li> </ul>"},{"location":"public_taxa_obs/#indexes","title":"Indexes","text":"<ul> <li><code>taxa_obs_scientific_name_idx</code> on <code>scientific_name</code></li> </ul>"},{"location":"public_taxa_obs/#triggers","title":"Triggers","text":"<ul> <li><code>update_modified_at</code>: Before update, updates the <code>modified_at</code> timestamp.</li> </ul>"},{"location":"public_taxa_obs/#conflicts-and-parent-taxa","title":"Conflicts and Parent Taxa","text":"<p>The design of the <code>taxa_obs</code> table accounts for the potential conflicts in scientific naming. For instance, the same scientific name may correspond to different organisms in separate branches of the tree of life (e.g., <code>Salix</code> as a genus of willows in plants and a genus of tunicates in animals). To resolve such conflicts, the <code>parent_scientific_name</code> column allows users to specify a parent taxa name, thus restricting results to a specific branch. This feature is particularly useful for accurate data retrieval and association in cases of nomenclatural ambiguity.</p>"},{"location":"public_variables/","title":"Table Variables","text":""},{"location":"public_variables/#table-variables","title":"Table: Variables","text":""},{"location":"public_variables/#description","title":"Description","text":"<p>The <code>variables</code> table in the database is crafted to support a diverse array of observation types and units. This versatility is key to accommodating various ecological data formats, such as counts of individuals, weight, density, occurrences, and presence/absence data, among others. Each of these observation types can be associated with different units of measurement. The table facilitates the recording and categorization of these different types and units, making it a pivotal component for data analysis and interpretation in ecological studies. The <code>id_variables</code> column, found in other related tables like <code>observations</code>, references the <code>variables</code> table to specify the type of observation, providing a clear link to the detailed description and unit of the variable being observed.</p>"},{"location":"public_variables/#dependencies","title":"Dependencies","text":"<ul> <li>Sequence: <code>variables_id_seq</code></li> </ul>"},{"location":"public_variables/#columns","title":"Columns","text":"Column Name Type Description Constraints id Integer A unique identifier for each variable. Primary key, Not Null, Default: nextval('variables_id_seq'::regclass) name Character Varying The name of the variable, indicating the type of observation (e.g., count, weight, density). Not Null, Part of Unique Constraint unit Character Varying Optional. The unit of measurement for the variable, which may vary based on the observation type. Not Null, Default: '', Part of Unique Constraint description Text Optional. A detailed description of the variable, explaining its significance and use in observations. -"},{"location":"public_variables/#additional-constraints","title":"Additional Constraints","text":"<ul> <li>Unique Constraint: <code>variables_name_unit_key</code> ensures that each combination of <code>name</code> and <code>unit</code> is unique within the table.</li> </ul>"}]}